// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	admin "github.com/yunbaifan/go-mall/admin/internal/handler/admin"
	role "github.com/yunbaifan/go-mall/admin/internal/handler/role"
	"github.com/yunbaifan/go-mall/admin/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: admin.AdminLoginHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/admin"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.JWTAuthToken},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/:userId",
					Handler: admin.AdminGetItemHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/delete/:userId",
					Handler: admin.AdminDeleteHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/info",
					Handler: admin.AdminInfoHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/list",
					Handler: admin.AdminListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/logout",
					Handler: admin.AdminLogoutHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/refreshToken",
					Handler: admin.RefreshTokenHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/register",
					Handler: admin.AdminRegisterHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/role/:adminId",
					Handler: admin.AdminRoleListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/role/update",
					Handler: admin.AdminRoleUpdateHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/updatePassword",
					Handler: admin.AdminUpdatePasswordHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/updateStatus/:userId",
					Handler: admin.AdminUpdateStatusHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/api/v1/admin"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/create",
				Handler: role.RoleCreateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/delete",
				Handler: role.RoleDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/listAll",
				Handler: role.RoleListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/update/roleId",
				Handler: role.RoleUpdateHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/role"),
	)
}
